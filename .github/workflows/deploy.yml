# Workflow for deploying static content to GitHub Pages (targets build in ./dist folder)
name: Deploy to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ['main']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets the GITHUB_TOKEN permissions to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build
        # Optional for SPA (e.g. React app built with React Router).
        # GitHub Pages doesn't natively support single page apps,
        # which is the case if we use React Router (with browserHistory)
        # or other routers that use HTML5 pushState history API under the hood.
        # example.com/route always returns a 404 page.
        # A fast workaround is to make this 404 redirect hit a
        # clone of our index.html in a 404.html file.
        # The script is basically "cp dist/index.html dist/404.html"
      - name: Clone index.html to 404.html for SPAs in GitHub Pages
        run: npm run cloneIndexTo404
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload build created in dist folder
          path: './dist'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
